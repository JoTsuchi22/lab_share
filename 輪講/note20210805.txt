輪講メモ

ローカルの記述では，ノード番号は1から始まることに注意してください．

グローバルの記述による領域を，アフィン変換ξ:すなわち，閉区間[x_A,x_A+1]から，閉区間[ξ_1,ξ_2]に変換することで，
ローカルの記述による領域と関連付けます．このとき，ξ(x_A)=ξ_1，ξ(x_A+1)=ξ_2となります．

ξ_1 = -1 とし， ξ_2 = +1 とするのが標準的です．

従って，ξは次の式(1.12.1)で表されます．

ここで，c1とc2は式(1.12.2)で決定される定数です．

このシステムを解くと式(1.12.3)のようになります．

h_A = x_A+1 - x_A の関係を思い出してください．

ξの逆関数はxについて解くと得られて，式(1.12.4)のようになります．

-----式の後から-----
式(1.12.1)では，ξは写像でxは点となっていて，式(1.12.4)では，xは写像でξは点となっています．

以下では，ローカルな番号システムに関連した表記方法として添え字スモールa,b,c...を採用しています．

添え字ラージA,B,C...は常にグローバルな番号システムに関連しています．

表記法の急増を抑制するために，ローカルシステムとグローバルシステムで同じ表記法を頻繁に使用します．
(例えば，daとdA，NaとNA)．

文脈でどちらの視点を採用しているか明らかになるため，一般的には混乱を招くことはありません．

もし混乱を招く恐れがある場合は，要素番号eに関連するローカル記述の量を示すために，上付き文字eが導入される．
(例えば，x^eのときd^e_a = d^A, N^e_a(ξ)=N_A(x^e(ξ))などです．
ここでx^eは，閉区間[ξ_1,ξ_2]から閉区間[x^e_1,x^e_2]=閉区間[x_A,x_A+1]です．)



(補足:  1.12.2は境界条件を代入した式みたいなもの)
yield:  (結果を)引き起こす，もたらす
(補足:  写像の意味，この式で言うとξをxの関数として表記しているかxをξの関数として表記しているかみたいな)
sequel: 以下に続く
pertain to: ~に関連する
proliferation:  急増
superscript:    上付き文字